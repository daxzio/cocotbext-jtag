name: Test Cocotbext Jtag

on:
  push:
  pull_request:
  schedule:
    - cron: '0 1 * * 0'
jobs:
  run_lint:
    strategy:
      fail-fast: false # So that one fail doesn't stop remaining tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade -r requirements.txt
      - name: Run lint
        continue-on-error: true
        run: |
          pyflakes cocotbext
      - name: Run Type check
        continue-on-error: true
        run: |
          mypy cocotbext

  build_icarus_linux:
    #uses: daxzio/setup-eda/.github/workflows/setup_icarus.yml@main
    uses: ./.github/workflows/setup_icarus.yml

  build_code_main:

    strategy:
      fail-fast: false # So that one fail doesn't stop remaining tests
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        target: [icarus, verilator, ghdl]
    runs-on: ubuntu-latest
    needs: [build_icarus_linux]

    steps:
      - uses: actions/checkout@v5
      - name: Report Environment
        run: |
          echo "Runing tests with env set to : ${CI_TARGET}"
      - name: Setup Verilator
        uses: veryl-lang/setup-verilator@v1
      - name: Cache Icarus
        uses: actions/cache@v4
        with:
          path: ${{ needs.build_icarus_linux.outputs.cache_dir }}
          key: ${{ needs.build_icarus_linux.outputs.cache_key }}
      - name: Add to PATH
        run: |
          echo "${{ needs.build_icarus_linux.outputs.cache_dir }}/bin" >> $GITHUB_PATH
          sudo apt install -y ccache
      - name: Install dependency for ghdl
        if: matrix.target == 'ghdl'
        uses: ghdl/setup-ghdl@v1
        with:
          version: nightly
          backend: llvm
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade -r requirements.txt
          python -m pip install .
          python -m pip uninstall -y cocotb
          python -m pip install --upgrade git+https://github.com/cocotb/cocotb.git
      - name: Run Tests verilog
        if: matrix.target == 'icarus' || matrix.target == 'verilator'
        #continue-on-error: true
        run: |
          unset PYTHONHOME
          make verilog SIM=${{ matrix.target }}
      - name: Run Tests VHDL
        if: matrix.target == 'ghdl'
        #continue-on-error: true
        run: |
          unset PYTHONHOME
          make vhdl SIM=${{ matrix.target }}

  build_code_rev:

    strategy:
      fail-fast: false # So that one fail doesn't stop remaining tests
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
        cocotb-version: ["v1.9.2", "v2.0.0"]
        target: [icarus, verilator, ghdl]
    runs-on: ubuntu-latest
    needs: [build_icarus_linux]

    steps:
      - uses: actions/checkout@v5
      - name: Report Environment
        run: |
          echo "Runing tests with env set to : ${CI_TARGET}"
      - name: Setup Verilator
        uses: veryl-lang/setup-verilator@v1
      - name: Cache Icarus
        uses: actions/cache@v4
        with:
          path: ${{ needs.build_icarus_linux.outputs.cache_dir }}
          key: ${{ needs.build_icarus_linux.outputs.cache_key }}
      - name: Add to PATH
        run: |
          echo "${{ needs.build_icarus_linux.outputs.cache_dir }}/bin" >> $GITHUB_PATH
          sudo apt install -y ccache
      - name: Install dependency for ghdl
        if: matrix.target == 'ghdl'
        uses: ghdl/setup-ghdl@v1
        with:
          version: nightly
          backend: llvm
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade -r requirements.txt
          python -m pip install .
          python -m pip uninstall -y cocotb
          python -m pip install --upgrade git+https://github.com/cocotb/cocotb.git@${{ matrix.cocotb-version }}
      - name: Run Tests verilog
        if: matrix.target == 'icarus' || matrix.target == 'verilator'
        run: |
          unset PYTHONHOME
          make verilog SIM=${{ matrix.target }}
      - name: Run Tests VHDL
        if: matrix.target == 'ghdl'
        run: |
          unset PYTHONHOME
          make vhdl SIM=${{ matrix.target }}

  pypi_release:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs: [run_lint, build_code_rev]
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - uses: actions/checkout@v5
      - name: Make PyPi dist release
        run: make dist
      - name: Publish Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
